1. Penetration Testing & Red Teaming & Ethical Hacking

1.1 What are the 5 phases of a penetration test?

-

1.2 Explain the difference between black-box, white-box, and gray-box testing.

Black-Box Testing: No knowledge of the target system. Simulates an external attacker using recon and exploitation (e.g., Nmap, Burp Suite). Tests real-world scenarios but is time-intensive.
White-Box Testing: Full access to system internals like code and configs. Enables deep analysis (e.g., code reviews for SQL injection). Thorough but less realistic for external threats.
Gray-Box Testing: Partial knowledge, like limited credentials. Balances realism and efficiency, mimicking insider threats or semi-informed attackers (e.g., testing privilege escalation).

Each suits different needs: black-box for external attacks, white-box for audits, gray-box for realistic insider scenarios.

-

1.3 What is the Cyber Kill Chain? How does it apply to offensive security?

The Cyber Kill Chain is a framework developed by Lockheed Martin to describe the stages of a cyberattack, helping security professionals understand and counter threats. It consists of seven phases:

   1. Reconnaissance: Gathering information about the target (e.g., OSINT, network scanning).
   2. Weaponization: Creating or preparing malicious tools, like malware or exploits.
   3. Delivery: Transmitting the weapon to the target (e.g., phishing emails, USB drops).
   4. Exploitation: Triggering the attack, exploiting vulnerabilities (e.g., unpatched software).
   5. Installation: Establishing persistence, like installing backdoors or malware.
   6. Command and Control (C2): Communicating with compromised systems for remote control.
   7. Actions on Objectives: Achieving the attacker’s goal (e.g., data theft, ransomware).

Application to Offensive Security: In an offensive security role, the Cyber Kill Chain guides penetration testing and red teaming. 
As a tester, I’d use it to structure attacks—conducting reconnaissance with tools like Nmap, weaponizing exploits via Metasploit, delivering payloads through phishing, and so on. 
It helps simulate real-world attacker tactics, identify vulnerabilities at each stage, and test defenses. 
By mapping actions to the kill chain, I can prioritize mitigations, like blocking C2 channels or patching exploitable flaws, to strengthen the target’s security posture.

-

1.4 What is the MITRE ATT&CK framework, and how do you use it?

MITRE ATT&CK stands for: MITRE's Adversarial Tactics, Techniques, and Common Knowledge

The MITRE ATT&CK framework is a comprehensive knowledge base of adversary tactics, techniques, and procedures (TTPs) based on real-world cyberattack observations. 
It organizes attacker behaviors into a matrix, covering stages like initial access, execution, persistence, privilege escalation, and exfiltration, with detailed techniques and sub-techniques (e.g., phishing, credential dumping).

How I Use It in Offensive Security: As a penetration tester or red teamer, I leverage MITRE ATT&CK to plan and execute realistic attack simulations. For example:

    Attack Planning: I map out TTPs to simulate specific threats, like using T1190 (exploit public-facing application) to test a web server vulnerability.
    Tool Selection: I choose tools aligned with techniques, such as Mimikatz for T1003 (credential dumping) or Cobalt Strike for T1071 (C2 communication).
    Emulation: I replicate known threat actor behaviors, like APT28’s TTPs, to test defenses against targeted attacks.
    Reporting: I align findings to ATT&CK techniques, providing clear, actionable insights for defenders to prioritize mitigations, like hardening against T1548 (abuse elevation control).

By using ATT&CK, I ensure structured, realistic testing that mirrors adversary behavior, helping organizations strengthen their defenses against specific threats.

-

1.5 





















