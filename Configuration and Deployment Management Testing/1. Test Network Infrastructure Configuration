Test Objectives

Review the applications’ configurations set across the network and validate that they are not vulnerable.
Validate that used frameworks and systems are secure and not susceptible to known vulnerabilities due to
unmaintained software or default settings and credentials.

-

How to Test

Known Server Vulnerabilities

Some automated tools will flag vulnerabilities based on the web server version retrieved. This leads to both false
positives and false negatives. On one hand, if the web server version has been removed or obscured by the local site
administrator the scan tool will not flag the server as vulnerable even if it is. On the other hand, if the vendor providing
the software does not update the web server version when vulnerabilities are fixed, the scan tool will flag vulnerabilities
that do not exist. The latter case is actually very common as some operating system vendors back port patches of
security vulnerabilities to the software they provide in the operating system, but do not do a full upload to the latest
software version. 
This happens in most GNU/Linux distributions such as Debian, Red Hat or SuSE. In most cases,
vulnerability scanning of an application architecture will only find vulnerabilities associated with the “exposed”
elements of the architecture (such as the web server) and will usually be unable to find vulnerabilities associated to
elements which are not directly exposed, such as the authentication back ends, the back end database, or reverse
proxies in use.

Finally, not all software vendors disclose vulnerabilities in a public way, and therefore these weaknesses do not
become registered within publicly known vulnerability databases. This information is only disclosed to customers or
published through fixes that do not have accompanying advisories. This reduces the usefulness of vulnerability
scanning tools. Typically, vulnerability coverage of these tools will be very good for common products (such as the
Apache web server, Microsoft’s Internet Information Server, or IBM’s Lotus Domino) but will be lacking for lesser known
products.

This is why reviewing vulnerabilities is best done when the tester is provided with internal information of the software
used, including versions and releases used and patches applied to the software.

*For BB, use explots-db.com



Administrative Tools

Any web server infrastructure requires the existence of administrative tools to maintain and update the information used
by the application. This information includes static content (web pages, graphic files), application source code, user
authentication databases, etc. Administrative tools will differ depending on the site, technology, or software used. For
example, some web servers will be managed using administrative interfaces which are, themselves, web servers (such
as the iPlanet web server) or will be administrated by plain text configuration files (in the Apache case) or use
operating-system GUI tools (when using Microsoft’s IIS server or ASP.Net).

Applications may also have administrative interfaces embedded in them that are used to manage the application data
itself (users, content, etc.).

*For BB, do recon

-

