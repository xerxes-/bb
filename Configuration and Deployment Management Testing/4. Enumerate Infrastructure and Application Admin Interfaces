Test Objectives

Identify hidden administrator interfaces and functionality.

-

How to Test

The following section describes vectors that may be used to test for the presence of administrative interfaces. These
techniques may also be used to test for related issues including privilege escalation, and are described elsewhere in
this guide(for example Testing for bypassing authorization schema and Testing for Insecure Direct Object References in
greater detail.

1. Directory and file enumeration. An administrative interface may be present but not visibly available to the tester.
Attempting to guess the path of the administrative interface may be as simple as requesting: /admin or
/administrator etc.. or in some scenarios can be revealed within seconds using Google dorks.

2. Use ffuf

3. Check Comments and links in source code.

4. Reviewing server and application documentation. If the application server or application is deployed in its default
configuration it may be possible to access the administration interface using information described in configuration
or help documentation. Default password lists should be consulted if an administrative interface is found and
credentials are required.

5. Publicly available information. Many applications such as WordPress have default administrative interfaces.

6. Alternative server port. Administration interfaces may be seen on a different port on the host than the main
application. For example, Apache Tomcatâ€™s Administration interface can often be seen on port 8080.

7. Parameter tampering. A GET or POST parameter or a cookie variable may be required to enable the administrator
functionality. Clues to this include the presence of hidden fields such as:

<input type="hidden" name="admin" value="no">
or in a cookie:
Cookie: session_cookie; useradmin=0

Once an administrative interface has been discovered, a combination of the above techniques may be used to attempt
to bypass authentication. If this fails, the tester may wish to attempt a brute force attack. In such an instance the tester
should be aware of the potential for administrative account lockout if such functionality is present.

Each web framework may have its own admin default pages or path. For example

PHP:
/phpinfo
/phpmyadmin/
/phpMyAdmin/
/mysqladmin/
/MySQLadmin
/MySQLAdmin
/login.php
/logon.php
/xmlrpc.php
/dbadmin

WordPress:
wp-admin/
wp-admin/about.php
wp-admin/admin-ajax.php
wp-admin/admin-db.php
wp-admin/admin-footer.php
wp-admin/admin-functions.php
wp-admin/admin-header.php

-
