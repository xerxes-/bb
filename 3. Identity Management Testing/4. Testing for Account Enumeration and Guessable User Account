Test Objectives

Review processes that pertain to user identification (e.g. registration, login, etc.).
Enumerate users where possible through response analysis.

-

How to Test

In black-box testing, the tester knows nothing about the specific application, username, application logic, error
messages on log in page, or password recovery facilities. If the application is vulnerable, the tester receives a response
message that reveals, directly or indirectly, some information useful for enumerating users.

1. HTTP Response Message

1.1 Testing for Valid Credentials

Record the server answer when you submit a valid user ID and valid password.
Using a web proxy, notice the information retrieved from this successful authentication (HTTP 200 Response,
length of the response).

1.2 Testing for Valid User with Wrong Password

Now, the tester should try to insert a valid user ID and a wrong password and record the error message generated by
the application.

1.3 Testing for a Nonexistent Username

Now, the tester should try to insert an invalid user ID and a wrong password and record the server answer (the tester
should be confident that the username is not valid in the application). Record the error message and the server answer.

Generally the application should respond with the same error message and length to the different incorrect
requests. If the responses are not the same, the tester should investigate and find out the key that creates a
difference between the two responses. For example:

1. Client request: Valid user/wrong password
2. Server response: The password is not correct
3. Client request: Wrong user/wrong password
4. Server response: User not recognized

The above responses let the client understand that for the first request they have a valid username. So they can
interact with the application requesting a set of possible user IDs and observing the answer.
Looking at the second server response, the tester understand in the same way that they don’t hold a valid
username. So they can interact in the same manner and create a list of valid user ID looking at the server answers.

2. Other Ways to Enumerate Users

2.1 Analyzing the Error Code Received on Login Pages

Some web application release a specific error code or message that we can analyze.

2.2 Analyzing URLs and URLs Re-directions

For example:
http://www.foo.com/err.jsp?User=baduser&Error=0
http://www.foo.com/err.jsp?User=gooduser&Error=2

As is seen above, when a tester provides a user ID and password to the web application, they see a message
indication that an error has occurred in the URL. In the first case they have provided a bad user ID and bad password.
In the second, a good user ID and a bad password, so they can identify a valid user ID.

2.3 URI Probing

Sometimes a web server responds differently if it receives a request for an existing directory or not. For instance in
some portals every user is associated with a directory. If testers try to access an existing directory they could receive a
web server error.

Example:
http://www.foo.com/account1 - we receive from web server: 403 Forbidden
http://www.foo.com/account2 - we receive from web server: 404 file Not Found

In the first case the user exists, but the tester cannot view the web page, in second case instead the user “account2”
does not exist. By collecting this information testers can enumerate the users.

2.4 Analyzing Web Page Titles

Testers can receive useful information on Title of web page, where they can obtain a specific error code or messages
that reveal if the problems are with the username or password.

For instance, if a user cannot authenticate to an application and receives a web page whose title is similar to:
Invalid user
Invalid authentication

2.5 Analyzing a Message Received from a Recovery Facility

When we use a recovery facility (i.e. a forgotten password function) a vulnerable application might return a message
that reveals if a username exists or not.

For example, messages similar to the following:
Invalid username: email address is not valid or the specified user was not found.
Valid username: Your password has been successfully sent to the email address you registered with.

2.6 Friendly 404 Error Message

When we request a user within the directory that does not exist, we don’t always receive 404 error code. Instead, we
may receive “200 ok” with an image, in this case we can assume that when we receive the specific image the user does
not exist. This logic can be applied to other web server response; the trick is a good analysis of web server and web
application messages.

2.7 Analyzing Response Times

As well as looking at the content of the responses, the time that the response take should also be considered.
Particularly where the request causes an interaction with an external service (such as sending a forgotten password
email), this can add several hundred milliseconds to the response, which can be used to determine whether the
requested user is valid.

3. Guessing Users

Possibilities are: - user IDs associated with credit card numbers, or in general numbers with a pattern. - user IDs
associated with real names, e.g. if Freddie Mercury has a user ID of “fmercury”, then you might guess Roger Taylor to
have the user ID of “rtaylor”.

By enumerating user accounts, you risk locking out accounts after a predefined number of failed probes (based on
application policy). Also, sometimes, your IP address can be banned by dynamic rules on the application firewall
or Intrusion Prevention System.

-
